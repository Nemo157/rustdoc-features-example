var searchIndex = {};
searchIndex["rustdoc_features_example"] = {"doc":"This is a small crate to test out different ways of rendering required\nfeatures in rustdoc.","items":[[0,"a","rustdoc_features_example","A public module that is always included in the crate.",null,null],[3,"A","rustdoc_features_example::a","A public struct that is always included in the crate.",null,null],[12,"a","","A public field that is always included in the crate.",0,null],[12,"foo","","A public field that is only included in the crate with feature `foo`.",0,null],[12,"foobar","","A public field that is only included in the crate with features `foo` and `bar`.",0,null],[5,"a","","A public function that is always included in the crate.",null,{"inputs":[],"output":null}],[5,"foo","","A public function that is only included in the crate with feature `foo`.",null,{"inputs":[],"output":null}],[5,"foobar","","A public function that is only included in the crate with features `foo` and `bar`.",null,{"inputs":[],"output":null}],[8,"ATrait","","A public trait that is always included in the crate.",null,null],[11,"foo","","A trait method that is only included in the crate with feature `foo`.",1,null],[11,"foobar","","A trait method that is only included in the crate with features `foo` and `bar`.",1,null],[8,"FooTrait","","A public trait that is only included in the crate with feature `foo`.",null,null],[11,"foo","","A trait method that is always included in the crate.\n(if the parent trait is)",2,null],[11,"foobar","","A trait method that is only included in the crate with feature `bar`.\n(if the parent trait is)",2,null],[8,"FooBarTrait","","A public trait that is only included in the crate with features `foo` and `bar`.",null,null],[11,"foo","","A trait method impl that is always included in the crate.\n(if the parent trait is)",3,null],[11,"foobar","","A trait method impl that is always included in the crate.\n(if the parent trait is)",3,null],[11,"a","","A public method that is always included in the crate.",0,null],[11,"foo","","A public method that is only included in the crate with feature `foo`.",0,null],[11,"foobar","","A public method that is only included in the crate with features `foo` and `bar`.",0,null],[11,"foo","","A trait method impl that is only included in the crate with feature `foo`.",0,null],[11,"foobar","","A trait method impl that is only included in the crate with features `foo` and `bar`.",0,null],[11,"foo","","A trait method impl that is always included in the crate.\n(if the parent trait is)",0,null],[11,"foobar","","A trait method impl that is only included in the crate with feature `bar`.\n(if the parent trait is)",0,null],[11,"foo","","A trait method impl that is always included in the crate.\n(if the parent trait is)",0,null],[11,"foobar","","A trait method impl that is always included in the crate.\n(if the parent trait is)",0,null],[0,"foo","rustdoc_features_example","A public module that is only included in the crate with feature `foo`.",null,null],[3,"Foo","rustdoc_features_example::foo","A public struct that is always included in the crate.\n(if the parent module is)",null,null],[12,"foo","","A public field that is always included in the crate.\n(if the parent module is)",4,null],[12,"foobar","","A public field that is only included in the crate with feature `bar`.\n(if the parent module is)",4,null],[5,"foo","","A public function that is always included in the crate.\n(if the parent module is)",null,{"inputs":[],"output":null}],[5,"foobar","","A public function that is only included in the crate with feature `bar`.\n(if the parent module is)",null,{"inputs":[],"output":null}],[8,"FooTrait","","A public trait that is always included in the crate.\n(if the parent module is)",null,null],[11,"foo","","A trait method that is always included in the crate.\n(if the parent trait is)",5,null],[11,"foobar","","A trait method that is only included in the crate with feature `bar`.\n(if the parent trait is)",5,null],[8,"FooBarTrait","","A public trait that is only included in the crate with feature `bar`.\n(if the parent module is)",null,null],[11,"foo","","A trait method that is always included in the crate.\n(if the parent trait is)",6,null],[11,"foobar","","A trait method that is always included in the crate.\n(if the parent trait is)",6,null],[11,"foo","","A public method that is always included in the crate.\n(if the parent module is)",4,null],[11,"foobar","","A public method that is only included in the crate with feature `bar`.\n(if the parent module is)",4,null],[11,"foo","","A trait method impl that is always included in the crate.\n(if the parent trait is)",4,null],[11,"foobar","","A trait method impl that is only included in the crate with feature `bar`.\n(if the parent trait is)",4,null],[11,"foo","","A trait method impl that is always included in the crate.\n(if the parent trait is)",4,null],[11,"foobar","","A trait method impl that is always included in the crate.\n(if the parent trait is)",4,null],[11,"bar","rustdoc_features_example::a","A public method that is always included in the crate.\n(if the parent module is)",0,null],[11,"foobar","","A public method that is only included in the crate with feature `foo`.\n(if the parent module is)",0,null],[11,"clone","","",0,null],[0,"foobar","rustdoc_features_example","A public module that is only included in the crate with features `foo` and `bar`.",null,null],[3,"FooBar","rustdoc_features_example::foobar","A public struct that is always included in the crate.\n(if the parent module is)",null,null],[12,"foobar","","A public field that is always included in the crate.\n(if the parent module is)",7,null],[5,"foobar","","A public function that is always included in the crate.\n(if the parent module is)",null,{"inputs":[],"output":null}],[8,"FooBarTrait","","A public trait that is always included in the crate.\n(if the parent module is)",null,null],[11,"foobar","","A trait method that is always included in the crate.\n(if the parent trait is)",8,null],[11,"foobar","","A public method that is always included in the crate.\n(if the parent module is)",7,null],[11,"foobar","","A trait method impl that is always included in the crate.\n(if the parent trait is)",7,null]],"paths":[[3,"A"],[8,"ATrait"],[8,"FooTrait"],[8,"FooBarTrait"],[3,"Foo"],[8,"FooTrait"],[8,"FooBarTrait"],[3,"FooBar"],[8,"FooBarTrait"]]};
initSearch(searchIndex);
